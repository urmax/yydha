import{_ as n,o as a,c as s,b as t}from"./app-571c1f36.js";const e={},p=t(`<h2 id="angular-中快速实现时钟功能" tabindex="-1"><a class="header-anchor" href="#angular-中快速实现时钟功能" aria-hidden="true">#</a> angular 中快速实现时钟功能</h2><p>在 Angular 中如何使用 Observable 与日期管道处理异步数据。具体展示了如何定义一个每 1000 毫秒更新的 Observable，并结合 Angular 的 AsyncPipe 和 DatePipe，将时间戳转化为友好的日期时间格式显示在 HTML 模板中。</p><h3 id="解决方式" tabindex="-1"><a class="header-anchor" href="#解决方式" aria-hidden="true">#</a> 解决方式</h3><p>原理及解释：</p><p>在对应的组件类内定义一个属性 time 为 Observable 对象 由定时器没 500 毫秒触发一次更新</p><p>使用 angular CommonModule 提供的 asyns date pipe 由 asyns 处理定时器 发射出异步的数据，date 处理时间的显示格式。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>time<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ time | async | date:&#39;yyyy-MM-dd HH:mm:ss&#39; }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Observable<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>observer<span class="token operator">:</span> Observer<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> observer<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),o=[p];function c(l,i){return a(),s("div",null,o)}const r=n(e,[["render",c],["__file","angularzhongkuaisushixianshizhonggongnen （jingquedaomiao）.html.vue"]]);export{r as default};
