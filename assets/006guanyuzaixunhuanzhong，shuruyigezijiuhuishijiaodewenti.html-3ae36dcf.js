import{_ as s,o as a,c as n,b as e}from"./app-571c1f36.js";const o={},t=e(`<h1 id="关于在循环中-输入一个字就会失焦的问题" tabindex="-1"><a class="header-anchor" href="#关于在循环中-输入一个字就会失焦的问题" aria-hidden="true">#</a> 关于在循环中，输入一个字就会失焦的问题</h1><h3 id="_1-问题出现" tabindex="-1"><a class="header-anchor" href="#_1-问题出现" aria-hidden="true">#</a> 1. 问题出现</h3><p>我用 v-for 循环，里面包括 a-input 节点，但每次按输入或者删除键，都会失去焦点，不能连贯输入就很懊恼！！</p><h3 id="_2-问题解决" tabindex="-1"><a class="header-anchor" href="#_2-问题解决" aria-hidden="true">#</a> 2. 问题解决</h3><p>最终还是代码问题，v-for 循环里的 key 值是包括 a-input 的输入的内容，每输入一个字符，key 就会改变，引发 render 重新渲染。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>span v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">&quot;(key, value) in entity_item&quot;</span>
     <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">&quot;key&quot;</span>
     v<span class="token operator">-</span>show<span class="token operator">=</span><span class="token string">&quot;value === columns_item.model&quot;</span> <span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>a<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">&quot;entity_item[columns_item.model]&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>

<span class="token comment">// 改之后</span>
<span class="token operator">&lt;</span>span v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">&quot;(key, index) in entity_item&quot;</span>
     <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">&quot;index&quot;</span>
     v<span class="token operator">-</span>show<span class="token operator">=</span><span class="token string">&quot;value === columns_item.model&quot;</span> <span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>a<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">&quot;entity_item[columns_item.model]&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-结论" tabindex="-1"><a class="header-anchor" href="#_3-结论" aria-hidden="true">#</a> 3. 结论</h3><p>写代码要注意：v-for 的 key 是否是可改变的，并且该 key 值与你所输入的控件绑定或会被该控件间接影响。</p>`,8),p=[t];function r(i,l){return a(),n("div",null,p)}const d=s(o,[["render",r],["__file","006guanyuzaixunhuanzhong，shuruyigezijiuhuishijiaodewenti.html.vue"]]);export{d as default};
