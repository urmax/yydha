import{_ as n,o as a,c as s,b as t}from"./app-571c1f36.js";const p={},e=t(`<h1 id="初识-angular-的测试" tabindex="-1"><a class="header-anchor" href="#初识-angular-的测试" aria-hidden="true">#</a> 初识 angular 的测试</h1><h3 id="angular-cli-集成" tabindex="-1"><a class="header-anchor" href="#angular-cli-集成" aria-hidden="true">#</a> angular cli 集成</h3><p>基于 Karma 和 Jasmine 的单元测试框架</p><p>基于 Protractor 的端到端的 测试框架(集成测试，整个系统要跑起来)</p><h3 id="测试的基本步骤" tabindex="-1"><a class="header-anchor" href="#测试的基本步骤" aria-hidden="true">#</a> 测试的基本步骤</h3><ol><li>命名你的测试包</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&quot;测试登录组件&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>准备测试环境</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&quot;测试登录组件&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// beforeEach 表示 在接下来的所有测试用例中 都需要这个前置条件</span>
  <span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token keyword">async</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    TestBed<span class="token punctuation">.</span><span class="token function">configureTestingModule</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">declaration</span><span class="token operator">:</span> <span class="token punctuation">[</span>LoginComponents<span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">imports</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        ShareModule<span class="token punctuation">,</span>
        StoreNodule<span class="token punctuation">.</span><span class="token function">provideStore</span><span class="token punctuation">(</span>reducer<span class="token punctuation">)</span><span class="token punctuation">,</span>
        BrownserAnimationModule<span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compileComponents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>编写测试用例</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&quot;组件的模板应该被正确的创建&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> compiled <span class="token operator">=</span> fixture<span class="token punctuation">.</span>debugElement<span class="token punctuation">.</span>nativeElement<span class="token punctuation">;</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>compiled<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerText<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&quot;登录&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),o=[e];function c(i,u){return a(),s("div",null,o)}const r=n(p,[["render",c],["__file","chushiangulardedanyuanceshi.html.vue"]]);export{r as default};
